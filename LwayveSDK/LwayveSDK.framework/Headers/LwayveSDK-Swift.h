// Generated by Apple Swift version 3.1 (swiftlang-802.0.53 clang-802.0.42)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if defined(__has_attribute) && __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

SWIFT_PROTOCOL("_TtP9LwayveSDK24AnalyticsControlProtocol_")
@protocol AnalyticsControlProtocol
/// Sends all pending analytic events
- (void)sendAnalyticEvents;
@end

@class UIApplication;

/// Used to control for notifications listening and handle received notifications
SWIFT_PROTOCOL_NAMED("ApplicationRemoteNotificationsHandler")
@protocol LwayveSDKApplicationRemoteNotificationsHandler
/// Call this method after initializing of the sdk for handling notifications during -application:didFinishLaunchingWithOptions:
/// \param application Singleton application object passed through -application:didFinishLaunchingWithOptions:
///
/// \param launchOptions A dictionary indicating the reason the app was launched (if any) passed through -application:didFinishLaunchingWithOptions:
///
- (void)handleApplication:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions;
/// Call this methods for handle remote notifications. Should be called in -application:didReceiveRemoteNotification: of -application:didReceiveRemoteNotification:fetchCompletionHandler:
/// \param application Singleton app object.
///
/// \param userInfo A dictionary that contains information related to the remote notification.
///
- (void)handleApplication:(UIApplication * _Nonnull)application didReceiveRemoteNotification:(NSDictionary * _Nonnull)userInfo;
/// Indicates state of remote notifications listening. Set false to not receive notifications.
@property (nonatomic) BOOL notificationsActive;
@end

@protocol AudioTrack;
@class NSError;

/// Methods of the protocol allows the delegate to handle sequence of audio tracks calling
SWIFT_PROTOCOL("_TtP9LwayveSDK20AudioControlDelegate_")
@protocol AudioControlDelegate
@optional
/// Tells the delegate that an AudioTrack has started playing.
/// \param track The audio track that started playing.
///
- (void)lwayweSDKWithDidStartPlayingTrack:(id <AudioTrack> _Nonnull)track;
/// Tells the delegate that an AudioTrack was paused.
/// \param track The audio track that was paused.
///
- (void)lwayweSDKWithDidPauseTrack:(id <AudioTrack> _Nonnull)track;
/// Tells the delegate that an AudioTrack ended.
/// \param track The audio track that ended.
///
- (void)lwayweSDKWithDidEndPlayingTrack:(id <AudioTrack> _Nonnull)track;
/// Tells the delegate that the SDK reached an error.
/// \param error Error object
///
- (void)lwayweSDKWithDidThrowError:(NSError * _Nonnull)error;
@end

@class NSCoder;

SWIFT_CLASS("_TtC9LwayveSDK16AudioPlayerError")
@interface AudioPlayerError : NSError
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull domain;)
+ (NSString * _Nonnull)domain SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDomain:(NSString * _Nonnull)domain code:(NSInteger)code userInfo:(NSDictionary * _Nullable)dict SWIFT_UNAVAILABLE;
@end

enum LwayveLanguage : NSInteger;

/// Protocol representing interface for object that can be played in audio player
SWIFT_PROTOCOL("_TtP9LwayveSDK10AudioTrack_")
@protocol AudioTrack <NSCoding>
/// Unique identifier of the audio track.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
/// An instance of URL that references a media resource.
@property (nonatomic, readonly, copy) NSURL * _Nonnull url;
/// Name of the audio track.
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
/// Track language
@property (nonatomic, readonly) enum LwayveLanguage language;
/// The duration of the track.
/// Initial value is kLwayveAudioTrackDurationIndefinite until the duration has been loaded.
/// For ensuring that the value of duration is loaded use durationLoadHandler
@property (nonatomic, readonly) NSTimeInterval duration;
/// Set your handler to receive update about loading of audio track duration
@property (nonatomic, copy) void (^ _Nullable durationLoadHandler)(NSTimeInterval);
@end


@interface NSBundle (SWIFT_EXTENSION(LwayveSDK))
@end


@interface NSDateFormatter (SWIFT_EXTENSION(LwayveSDK))
@end


SWIFT_CLASS("_TtC9LwayveSDK14LwayveSDKError")
@interface LwayveSDKError : NSError
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull underlyingErrorKey;)
+ (NSString * _Nonnull)underlyingErrorKey SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithDomain:(NSString * _Nonnull)domain code:(NSInteger)code userInfo:(NSDictionary * _Nullable)dict OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

enum LWNNetworkRequestErrorCode : NSInteger;

SWIFT_CLASS("_TtC9LwayveSDK22LWNNetworkRequestError")
@interface LWNNetworkRequestError : LwayveSDKError
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull domain;)
+ (NSString * _Nonnull)domain SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) enum LWNNetworkRequestErrorCode networkRequestErrorCode;
@property (nonatomic, readonly) NSError * _Nullable underlyingError;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)initWithCode:(enum LWNNetworkRequestErrorCode)code underlyingError:(NSError * _Nullable)underlyingError OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNetworkFailure:(NSError * _Nullable)error;
- (nonnull instancetype)initWithRequestSerializationError:(NSError * _Nullable)error;
- (nonnull instancetype)initWithResponseSerializationError:(NSError * _Nullable)error;
- (nonnull instancetype)initWithDomain:(NSString * _Nonnull)domain code:(NSInteger)code userInfo:(NSDictionary * _Nullable)dict SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, LWNNetworkRequestErrorCode) {
  LWNNetworkRequestErrorCodeUnknown = 0,
  LWNNetworkRequestErrorCodeNetworkFailure = 1,
  LWNNetworkRequestErrorCodeRequestSerializationError = 2,
  LWNNetworkRequestErrorCodeResponseSerializationError = 3,
};


SWIFT_CLASS("_TtC9LwayveSDK8Location")
@interface Location : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) NSInteger hashValue;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


@interface Location (SWIFT_EXTENSION(LwayveSDK)) <NSCoding>
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
@end

/// Enum of supported languages
typedef SWIFT_ENUM(NSInteger, LwayveLanguage) {
  LwayveLanguageEnglish = 0,
  LwayveLanguageFrench = 1,
};

@class LwayveSDKConfiguration;
@protocol PlayListEventsListener;
@protocol LwayveSDKDelegate;

SWIFT_CLASS("_TtC9LwayveSDK9LwayveSDK")
@interface LwayveSDK : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
/// The method must be called before SDK can be used.
/// \param configuration Configuration object with required parameters
///
- (BOOL)initializeWithConfiguration:(LwayveSDKConfiguration * _Nonnull)configuration error:(NSError * _Nullable * _Nullable)error;
- (void)deinitialize;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LwayveSDK * _Nonnull sharedSDK;)
+ (LwayveSDK * _Nonnull)sharedSDK SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, weak) id <AudioControlDelegate> _Nullable audioControlDelegate;
@property (nonatomic, weak) id <PlayListEventsListener> _Nullable playlistEventsListener;
@property (nonatomic, weak) id <LwayveSDKDelegate> _Nullable delegate;
/// Using this property you can get or update sdk preferred language.
/// Update is asynchronous operation. Default value is current device language if Lwayve sdk it supports.
/// Opposite default is LwayveLanguage.en
@property (nonatomic) enum LwayveLanguage language;
@end


@interface LwayveSDK (SWIFT_EXTENSION(LwayveSDK)) <AnalyticsControlProtocol>
- (void)sendAnalyticEvents;
@end

@class Playlist;

/// Protocol contains methods for handling updates of the playlist
SWIFT_PROTOCOL("_TtP9LwayveSDK22PlayListEventsListener_")
@protocol PlayListEventsListener
@optional
/// Tells the delegate that playlist based on existing experience was updated.
/// \param playlist Object that contains additional information about updated playlist.
///
- (void)playlistDidUpdate:(Playlist * _Nonnull)playlist;
@end


@interface LwayveSDK (SWIFT_EXTENSION(LwayveSDK)) <PlayListEventsListener>
- (void)playlistDidUpdate:(Playlist * _Nonnull)playlist;
@property (nonatomic, readonly, strong) Playlist * _Nullable playlist;
@end


@interface LwayveSDK (SWIFT_EXTENSION(LwayveSDK)) <AudioControlDelegate>
- (void)lwayweSDKWithDidStartPlayingTrack:(id <AudioTrack> _Nonnull)track;
- (void)lwayweSDKWithDidPauseTrack:(id <AudioTrack> _Nonnull)track;
- (void)lwayweSDKWithDidEndPlayingTrack:(id <AudioTrack> _Nonnull)track;
- (void)lwayweSDKWithDidThrowError:(NSError * _Nonnull)error;
@end


@interface LwayveSDK (SWIFT_EXTENSION(LwayveSDK)) <LwayveSDKApplicationRemoteNotificationsHandler>
@property (nonatomic) BOOL notificationsActive;
- (void)handleApplication:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions;
- (void)handleApplication:(UIApplication * _Nonnull)application didReceiveRemoteNotification:(NSDictionary * _Nonnull)userInfo;
@end


@interface LwayveSDK (SWIFT_EXTENSION(LwayveSDK))
@property (nonatomic, readonly) BOOL isReadyToPlay;
@property (nonatomic, readonly) BOOL isPlaying;
- (void)play;
- (void)pause;
- (void)stop;
- (void)skip;
- (void)rewind;
@end

@class LwayveSDKUserContext;

@interface LwayveSDK (SWIFT_EXTENSION(LwayveSDK))
- (void)setWithLocations:(NSArray<NSString *> * _Nonnull)locations;
- (void)setWithUserLikes:(NSArray<NSString *> * _Nonnull)userLikes;
@property (nonatomic, readonly, strong) LwayveSDKUserContext * _Nullable currentUserContext;
- (void)addWithUserLikes:(NSArray<NSString *> * _Nonnull)userLikes;
- (void)addWithLocations:(NSArray<NSString *> * _Nonnull)locations;
- (void)removeWithUserLikes:(NSArray<NSString *> * _Nonnull)userLikes;
- (void)removeWithLocations:(NSArray<NSString *> * _Nonnull)locations;
@end


/// Protocol provides interface for control building playlist.
SWIFT_PROTOCOL("_TtP9LwayveSDK23PlaylistControlProtocol_")
@protocol PlaylistControlProtocol
/// Refreshes playlist based on the current context of playlist builder.
- (void)refreshPlaylist;
/// Re-requests experience from server.
- (void)forceReloadExperience;
/// List of playlist items.
@property (nonatomic, readonly, strong) Playlist * _Nullable generatedPlaylist;
/// List of audio track in the audio queue including currently playing track if there is.
@property (nonatomic, readonly, copy) NSArray<id <AudioTrack>> * _Nonnull audioQueue;
/// List of audio tracks that were not played to the end.
@property (nonatomic, readonly, copy) NSArray<id <AudioTrack>> * _Nonnull unplayedTracksQueue;
/// List of played track. The last track is the most recent played one.
@property (nonatomic, readonly, copy) NSArray<id <AudioTrack>> * _Nonnull playedTracksHistory;
/// List of played track identifiers
@property (nonatomic, readonly, copy) NSSet<NSString *> * _Nonnull playedTracksIds;
/// Clears history of played tracks
- (void)clearPlayedItems;
/// Allows to provide user time offset relatively to current time.
/// Example:
/// \code
/// `LwayveSDK.shared.setTimeOffset(TimeInterval(-1 * 60 * 60 * 24)) // Get playlist for yesterday.`
///
/// \endcode\param timeOffset If timeOffset is 0, then the device time will be used as a user time to generate playlist.
/// Use negative timeOffset to get a playlist “from the past” and positive for a playlist “from the future”
///
- (void)setTimeOffset:(NSTimeInterval)timeOffset;
@end


@interface LwayveSDK (SWIFT_EXTENSION(LwayveSDK)) <PlaylistControlProtocol>
- (void)refreshPlaylist;
- (void)forceReloadExperience;
@property (nonatomic, readonly, strong) Playlist * _Nullable generatedPlaylist;
@property (nonatomic, readonly, copy) NSArray<id <AudioTrack>> * _Nonnull audioQueue;
@property (nonatomic, readonly, copy) NSArray<id <AudioTrack>> * _Nonnull unplayedTracksQueue;
@property (nonatomic, readonly, copy) NSArray<id <AudioTrack>> * _Nonnull playedTracksHistory;
@property (nonatomic, readonly, copy) NSSet<NSString *> * _Nonnull playedTracksIds;
- (void)clearPlayedItems;
- (void)setTimeOffset:(NSTimeInterval)timeOffset;
@end

enum LwayveSDKConfigurationType : NSInteger;

SWIFT_CLASS("_TtC9LwayveSDK22LwayveSDKConfiguration")
@interface LwayveSDKConfiguration : NSObject
/// Use configurationType to set predefined deployment settings
@property (nonatomic, readonly) enum LwayveSDKConfigurationType configurationType;
/// Use baseURL to override default Lwayve service URL
@property (nonatomic, readonly, copy) NSURL * _Nonnull baseURL;
/// Authentification token
@property (nonatomic, readonly, copy) NSString * _Nonnull authenticationToken;
- (nonnull instancetype)initWithConfigurationType:(enum LwayveSDKConfigurationType)configurationType baseURL:(NSURL * _Nullable)baseURL authenticationToken:(NSString * _Nonnull)authenticationToken OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, LwayveSDKConfigurationType) {
  LwayveSDKConfigurationTypeQa = 0,
  LwayveSDKConfigurationTypeProd = 1,
};


/// Methods of the protocol allows the delegate to manage lifecicle events of the SDK
SWIFT_PROTOCOL("_TtP9LwayveSDK17LwayveSDKDelegate_")
@protocol LwayveSDKDelegate
@optional
/// Tells the delegate that Lwayve SDK succefully initialized.
/// \param sdk Lwayve SDK object.
///
- (void)lwayveSDKWithDidInit:(LwayveSDK * _Nonnull)sdk;
/// Tells the delegate that Lwayve SDK deinitialized.
/// \param sdk Lwayve SDK object.
///
- (void)lwayveSDKWithDidDeinit:(LwayveSDK * _Nonnull)sdk;
@end


typedef SWIFT_ENUM(NSInteger, LwayveSDKInitializationError) {
  LwayveSDKInitializationErrorUnknownError = 0,
  LwayveSDKInitializationErrorAlreadyInitialized = 1,
};
static NSString * _Nonnull const LwayveSDKInitializationErrorDomain = @"LwayveSDK.LwayveSDKInitializationError";


@protocol PlaylistItem;

/// Contains information about generated playlist
SWIFT_CLASS("_TtC9LwayveSDK8Playlist")
@interface Playlist : NSObject
/// Unique identifier of the playlist.
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
/// Value representing Date when playlist will be updated.
@property (nonatomic, readonly, copy) NSDate * _Nullable nextEventTime;
/// Playlist items.
@property (nonatomic, readonly, copy) NSArray<id <PlaylistItem>> * _Nonnull items;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end



/// Protocol contains information about objects that will be used for preparing playlist
SWIFT_PROTOCOL("_TtP9LwayveSDK12PlaylistItem_")
@protocol PlaylistItem
/// Unique identifier of the playlist item
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
/// Name of the playlist item
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
/// String representing path for item resource
@property (nonatomic, readonly, copy) NSString * _Nullable url;
/// Track language
@property (nonatomic, readonly) enum LwayveLanguage language;
@end


SWIFT_CLASS("_TtC9LwayveSDK3Tag")
@interface Tag : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) NSInteger hashValue;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


@interface Tag (SWIFT_EXTENSION(LwayveSDK)) <NSCoding>
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
@end


SWIFT_CLASS("_TtC9LwayveSDK4User")
@interface User : NSObject <NSCoding>
@property (nonatomic, readonly, copy) NSString * _Nonnull userId;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable firstName;
@property (nonatomic, readonly, copy) NSString * _Nullable lastName;
@property (nonatomic, readonly) BOOL activated;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull authorities;
- (nonnull instancetype)initWithUserId:(NSString * _Nonnull)userId email:(NSString * _Nullable)email firstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName activated:(BOOL)activated authorities:(NSArray<NSString *> * _Nullable)authorities OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


@interface User (SWIFT_EXTENSION(LwayveSDK))
@end


SWIFT_CLASS_NAMED("UserContext")
@interface LwayveSDKUserContext : NSObject
@property (nonatomic, readonly, copy) NSDate * _Nonnull time;
@property (nonatomic, readonly, copy) NSSet<Location *> * _Nonnull locations;
@property (nonatomic, readonly, copy) NSSet<Tag *> * _Nonnull tags;
@property (nonatomic, readonly, copy) NSSet<NSString *> * _Nonnull playedPlaylistItemIds;
- (nonnull instancetype)initWithTime:(NSDate * _Nonnull)time locations:(NSSet<Location *> * _Nonnull)locations tags:(NSSet<Tag *> * _Nonnull)tags playedPlaylistItemIds:(NSSet<NSString *> * _Nonnull)playedPlaylistItemIds OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


@interface LwayveSDKUserContext (SWIFT_EXTENSION(LwayveSDK))
@end


@interface LwayveSDKUserContext (SWIFT_EXTENSION(LwayveSDK))
@end


@interface LwayveSDKUserContext (SWIFT_EXTENSION(LwayveSDK)) <NSCoding>
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
@end

#pragma clang diagnostic pop
